#!/usr/bin/env python3

#
# Copyright (C) 2021 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

#
# Request a let's encrypt certificate
# Input example:
#  {"fqdn": "example.com"}
#

import json
import sys
import os
import agent
import uuid

# Try to parse the stdin as JSON.
# If parsing fails, output everything to stderr
data = json.load(sys.stdin)

agent_id = os.getenv("AGENT_ID", "")
if not agent_id:
    raise Exception("AGENT_ID not found inside the environemnt")

# Connect to redis
rdb = agent.redis_connect(privileged=True).pipeline()

# Setup HTTP ans HTTPS routers
router=f'{agent_id}/kv/http/routers/certificate-{data["fqdn"]}'
rdb.set(f'{router}/entrypoints', "https")
rdb.set(f'{router}/service', "ping@internal")
path = uuid.uuid4()
rdb.set(f'{router}/rule', f'Host(`{data["fqdn"]}`) && Path(`/{path}`)')
rdb.set(f'{router}/priority', '1')
rdb.set(f'{router}/tls', "true")
rdb.set(f'{router}/tls/domains/0/main', data["fqdn"])
rdb.set(f'{router}/tls/certresolver', "letsencrypt")

rdb.execute()

# Output valid JSON
print("true")
